[{"P:\\Проекты\\repfront\\src\\index.js":"1","P:\\Проекты\\repfront\\src\\context\\ModalContext.js":"2","P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\ModalsBlock.jsx":"3","P:\\Проекты\\repfront\\src\\components\\Button\\index.js":"4","P:\\Проекты\\repfront\\src\\pages\\UserTable\\UserTable.js":"5","P:\\Проекты\\repfront\\src\\App.js":"6","P:\\Проекты\\repfront\\src\\ducks\\user.js":"7","P:\\Проекты\\repfront\\src\\ducks\\index.js":"8","P:\\Проекты\\repfront\\src\\ducks\\modal.js":"9","P:\\Проекты\\repfront\\src\\components\\Input\\Input.jsx":"10"},{"size":413,"mtime":1612194262335,"results":"11","hashOfConfig":"12"},{"size":88,"mtime":1612191842235,"results":"13","hashOfConfig":"12"},{"size":2311,"mtime":1612802583599,"results":"14","hashOfConfig":"12"},{"size":27,"mtime":1610461659059,"results":"15","hashOfConfig":"12"},{"size":10279,"mtime":1612802633343,"results":"16","hashOfConfig":"12"},{"size":2241,"mtime":1612803497303,"results":"17","hashOfConfig":"12"},{"size":3098,"mtime":1612803412995,"results":"18","hashOfConfig":"12"},{"size":464,"mtime":1612802232355,"results":"19","hashOfConfig":"12"},{"size":582,"mtime":1612802777420,"results":"20","hashOfConfig":"12"},{"size":1262,"mtime":1611320514949,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o84hz9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"P:\\Проекты\\repfront\\src\\index.js",[],"P:\\Проекты\\repfront\\src\\context\\ModalContext.js",[],"P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\ModalsBlock.jsx",["43","44"],"P:\\Проекты\\repfront\\src\\components\\Button\\index.js",[],"P:\\Проекты\\repfront\\src\\pages\\UserTable\\UserTable.js",["45","46","47","48","49"],"import React, { useCallback, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles, styled } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Button, Input, Table, Title, SearchInput } from '../../components';\r\nimport { DATA_PER_PAGE, MODAL_NAME } from '../../constants';\r\nimport {fetchUserList, setCurrentPage} from '../../ducks/user';\r\nimport { setModalName } from '../../ducks/modal';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginLeft: '-20px',\r\n        width: 520\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Wrapper = styled(Box)({\r\n    width: '1120px',\r\n    margin: '30px auto',\r\n});\r\nconst InputWrapper = styled(Box)({\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '560px',\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n});\r\nconst ButtonWrapper = styled(Box)({\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    gridColumnGap: '20px',\r\n    width: '400px',\r\n    margin: '30px 35%',\r\n});\r\nconst SelectWrapper = styled(Box)({\r\n    marginLeft: '20px'\r\n});\r\n\r\nconst GridWrapper = styled(Box)({\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    columnGap: '20px',\r\n    rowGap: '20px',\r\n    width: '1000px',\r\n});\r\n\r\n\r\nconst UserTable = ({\r\n    searchString,\r\n    setSearchString,\r\n}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        userList,\r\n        isFetching,\r\n        isError,\r\n        amountOfUsers,\r\n        currentPage,\r\n        isListEmpty,\r\n        shouldShowPagination\r\n    } = useSelector((state) => ({\r\n        userList: state.userReducer.userList,\r\n        amountOfUsers: state.userReducer.amountOfUsers,\r\n        currentPage: state.userReducer.currentPage,\r\n        isListEmpty: state.userReducer.amountOfUsers === 0,\r\n        shouldShowPagination: state.userReducer.amountOfUsers > 10,\r\n        isFetching: state.userReducer.isFetching,\r\n        isError: state.userReducer.isError,\r\n    }));\r\n\r\n    const countOfPages = Math.round(amountOfUsers / DATA_PER_PAGE);\r\n\r\n    const [userToAdd, setUserToAdd] = useState({\r\n        name: '',\r\n        username: '',\r\n        age: '',\r\n        sex: '',\r\n        email: '',\r\n        address: '',\r\n        phone: '',\r\n        website:'',\r\n        company: ''\r\n    });\r\n\r\n    const isAddButtonDisabled = !userToAdd.name || !userToAdd.username || !userToAdd.age || !userToAdd.sex;\r\n\r\n    const addItemToList = useCallback(() => {\r\n        fetch('http://localhost:3001/users/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userToAdd),\r\n            // В заголовке явно указываем, что в теле запроса лежит JSON формат\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(() => {\r\n                dispatch(fetchUserList());\r\n                dispatch(setModalName(MODAL_NAME.SUCCESS_MODAL));\r\n            })\r\n            // Отлавливаем ошибку\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch(setModalName(MODAL_NAME.FAILURE_MODAL));\r\n            });\r\n\r\n    }, [userToAdd, userList, setModalName]);\r\n\r\n    const prepareUserToAdd = useCallback((value) => {\r\n        setUserToAdd(prevState => ({\r\n            ...prevState,\r\n            ...value\r\n        }))\r\n    }, [userToAdd]);\r\n\r\n    const handleSelectChange = useCallback((e) => {\r\n        setUserToAdd(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }, [userToAdd]);\r\n\r\n    const handleChangePage = useCallback((e, page) => {\r\n        dispatch(setCurrentPage(page));\r\n    }, []);\r\n\r\n    const changeItemInList = useCallback(() => {\r\n        fetch(`http://localhost:3001/users/${userToAdd.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(userToAdd),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n        .then(() => {\r\n            dispatch(fetchUserList());\r\n        })\r\n    }, [userToAdd]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Paper elevation={3} className = \"item4\">\r\n                <Title title={'First app'}/>\r\n                <InputWrapper>\r\n                    <SearchInput\r\n                        placeholder={'Найти'}\r\n                        name={'searching'}\r\n                        label={'Searching'}\r\n                        type={'text'}\r\n                        value={searchString}\r\n                        onChange={setSearchString}\r\n                    />\r\n                </InputWrapper>\r\n                <GridWrapper>\r\n                    <Input\r\n                        value={userToAdd.name}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'Пётр'}\r\n                        name={'name'}\r\n                        label={'Name'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.username}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'Петров'}\r\n                        name={'username'}\r\n                        label={'Username'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.email}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'@mail'}\r\n                        name={'email'}\r\n                        label={'Email'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.address}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'Mos'}\r\n                        name={'address'}\r\n                        label={'Address'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.phone}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'+7(987)6543210'}\r\n                        name={'phone'}\r\n                        label={'Phone'}\r\n                        type={'number'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.website}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'http'}\r\n                        name={'website'}\r\n                        label={'Website'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.company}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'OAO'}\r\n                        name={'company'}\r\n                        label={'Company'}\r\n                        type={'text'}\r\n                    />\r\n                    <Input\r\n                        value={userToAdd.age}\r\n                        onChange={prepareUserToAdd}\r\n                        placeholder={'1'}\r\n                        name={'age'}\r\n                        label={'Age'}\r\n                        type={'number'}\r\n                    />\r\n                    <SelectWrapper>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\" >Sex</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={userToAdd.sex}\r\n                                name={'sex'}\r\n                                onChange={handleSelectChange}\r\n                                label={'Sex'}\r\n                            >\r\n                                <MenuItem value=\"Men\">Men</MenuItem>\r\n                                <MenuItem value=\"Women\">Women</MenuItem>\r\n                                <MenuItem value=\"Robot\">Robot</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </SelectWrapper>\r\n                </GridWrapper>\r\n                <ButtonWrapper>\r\n                    <Button\r\n                        text={'Add element'}\r\n                        onClick={() => addItemToList()}\r\n                        disabled={isAddButtonDisabled}\r\n                    />\r\n                    <Button\r\n                        text={'Change Element'}\r\n                        onClick={() => changeItemInList()}\r\n                        disabled={isAddButtonDisabled}\r\n                    />\r\n                </ButtonWrapper>\r\n                {\r\n                    isFetching && (\r\n                        <CircularProgress />\r\n                    )\r\n                }\r\n                {\r\n                    isError && (\r\n                        <Alert severity=\"error\">Error while fetching user list. Please try again.</Alert>\r\n                    )\r\n                }\r\n                {\r\n                    !isListEmpty && (\r\n                        <Table arr={userList} changeItem={setUserToAdd} />\r\n                    )\r\n                }\r\n                {\r\n                    shouldShowPagination && (\r\n                        <Pagination\r\n                            count={countOfPages}\r\n                            onChange={handleChangePage}\r\n                            page={currentPage}\r\n                            color={'primary'}\r\n                        />\r\n                    )\r\n                }\r\n            </Paper>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default UserTable;\r\n","P:\\Проекты\\repfront\\src\\App.js",["50"],"P:\\Проекты\\repfront\\src\\ducks\\user.js",["51","52","53"],"P:\\Проекты\\repfront\\src\\ducks\\index.js",[],"P:\\Проекты\\repfront\\src\\ducks\\modal.js",[],"P:\\Проекты\\repfront\\src\\components\\Input\\Input.jsx",["54","55"],{"ruleId":"56","severity":1,"message":"57","line":32,"column":9,"nodeType":"58","endLine":32,"endColumn":11,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":45,"column":8,"nodeType":"58","endLine":45,"endColumn":39,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"60","line":121,"column":8,"nodeType":"58","endLine":121,"endColumn":43,"suggestions":"62"},{"ruleId":"56","severity":1,"message":"63","line":128,"column":8,"nodeType":"58","endLine":128,"endColumn":19,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"63","line":135,"column":8,"nodeType":"58","endLine":135,"endColumn":19,"suggestions":"65"},{"ruleId":"56","severity":1,"message":"57","line":139,"column":8,"nodeType":"58","endLine":139,"endColumn":10,"suggestions":"66"},{"ruleId":"56","severity":1,"message":"57","line":152,"column":8,"nodeType":"58","endLine":152,"endColumn":19,"suggestions":"67"},{"ruleId":"56","severity":1,"message":"68","line":32,"column":8,"nodeType":"58","endLine":32,"endColumn":27,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":10,"column":7,"nodeType":"72","messageId":"73","endLine":10,"endColumn":29},{"ruleId":"70","severity":1,"message":"74","line":11,"column":7,"nodeType":"72","messageId":"73","endLine":11,"endColumn":31},{"ruleId":"70","severity":1,"message":"75","line":12,"column":7,"nodeType":"72","messageId":"73","endLine":12,"endColumn":29},{"ruleId":"56","severity":1,"message":"76","line":26,"column":8,"nodeType":"58","endLine":26,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":40,"column":13,"nodeType":"80","endLine":40,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'setModalName' aren't valid dependencies because mutating them doesn't re-render the component.",["82"],["83"],"React Hook useCallback has an unnecessary dependency: 'userToAdd'. Either exclude it or remove the dependency array.",["84"],["85"],["86"],["87"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["88"],"no-unused-vars","'ADD_USER_TO_LIST_START' is assigned a value but never used.","Identifier","unusedVar","'ADD_USER_TO_LIST_SUCCESS' is assigned a value but never used.","'ADD_USER_TO_LIST_ERROR' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["89"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},{"desc":"90","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch]",{"range":"106","text":"107"},"Update the dependencies array to be: [params.id, history, dispatch]",{"range":"108","text":"109"},"Update the dependencies array to be: [userToAdd, dispatch]",{"range":"110","text":"111"},"Update the dependencies array to be: []",{"range":"112","text":"113"},{"range":"114","text":"113"},{"range":"115","text":"107"},"Update the dependencies array to be: [dispatch, userToAdd]",{"range":"116","text":"117"},"Update the dependencies array to be: [dispatch, location.pathname]",{"range":"118","text":"119"},"Update the dependencies array to be: [onChange]",{"range":"120","text":"121"},[1079,1081],"[dispatch]",[1451,1482],"[params.id, history, dispatch]",[3632,3667],"[userToAdd, dispatch]",[3835,3846],"[]",[4035,4046],[4157,4159],[4539,4550],"[dispatch, userToAdd]",[1079,1098],"[dispatch, location.pathname]",[707,709],"[onChange]"]