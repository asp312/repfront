[{"/Users/andrewpolyanin/Documents/GitHub/repfront/src/index.js":"1","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/index.js":"2","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/Button.jsx":"3","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/Input.jsx":"4","/Users/andrewpolyanin/Documents/GitHub/repfront/src/App.js":"5","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/index.js":"6","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/index.js":"7","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/Table.jsx":"8","/Users/andrewpolyanin/Documents/GitHub/repfront/src/Bpp.js":"9"},{"size":219,"mtime":1610541878010,"results":"10","hashOfConfig":"11"},{"size":125,"mtime":1610641903496,"results":"12","hashOfConfig":"11"},{"size":506,"mtime":1610989557127,"results":"13","hashOfConfig":"11"},{"size":1192,"mtime":1611048840385,"results":"14","hashOfConfig":"11"},{"size":5741,"mtime":1611052183635,"results":"15","hashOfConfig":"11"},{"size":26,"mtime":1610541878007,"results":"16","hashOfConfig":"11"},{"size":25,"mtime":1610541878009,"results":"17","hashOfConfig":"11"},{"size":1397,"mtime":1610989557128,"results":"18","hashOfConfig":"11"},{"size":1565,"mtime":1611065059400,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v2xl1s",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andrewpolyanin/Documents/GitHub/repfront/src/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/index.js",[],["41","42"],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/Button.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/Input.jsx",["43","44","45","46"],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/App.js",["47","48","49"],"import React, { useState, useCallback } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Button, Title, Input, Table } from './components';\nimport { makeStyles, styled } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport './style.css';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      marginLeft: '-20px',\n      width: 520\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n//const useStyles = makeStyles({\n    //item3: {\n       // width: '1100px',\n       // margin: '0 auto',\n   // }\n//});\n\nconst Wrapper = styled(Box)({\n    width: '1100px',\n    margin: '0 auto',\n});\nconst ButtonWrapper = styled(Box)({\n    width: '300px',\n    margin: '30px 43.5%',\n});\nconst SelectWrapper = styled(Box)({\n        marginLeft: '20px'\n});\n\nconst GridWrapper = styled(Box)({\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    columnGap: '20px',\n    rowGap: '20px',\n    width: '1000px',\n    marginLeft: '60px'\n});\n\n\nfunction App() {\n  const classes = useStyles();\n  const [list, setList] = useState([]);\n  const listFromLocalStorage = JSON.parse(localStorage.getItem('list'));\n\n  if (listFromLocalStorage) {\n      setList(listFromLocalStorage);\n  }\n    /**\n     *  1. Проверить есть ли list в localStorage\n     *  2. Если есть, то положить его в состояние через setList\n     *  3. При добавлении нового пользователя перезаписать list в localStorage\n     */\n  const [userToAdd, setUserToAdd] = useState({\n      name: '',\n      surname: '',\n      age: '',\n      sex: '',\n  });\n\n  const isAddButtonDisabled = !userToAdd.name || !userToAdd.surname || !userToAdd.age || !userToAdd.sex;\n\n  const isListEmpty = list.length === 0;\n\n  const addItemToList = useCallback(() => {\n      setList([...list, userToAdd]);\n      setUserToAdd({\n          name: '',\n          surname: '',\n          age: '',\n          sex: '',\n      });\n  }, [userToAdd]);\n\n  const prepareUserToAdd = useCallback((value) => {\n      setUserToAdd(prevState => ({\n          ...prevState,\n          ...value\n      }))\n  }, [userToAdd]);\n\n  const handleSelectChange = useCallback((e) => {\n      setUserToAdd(prevState => ({\n          ...prevState,\n          [e.target.name]: e.target.value\n      }))\n  }, [userToAdd]);\n\n  return (\n        <Wrapper>\n            <Paper elevation={3} className = \"item4\">\n            <Title title={'First app'}/>\n            <GridWrapper>\n                <Input\n                    value={userToAdd.name}\n                    onChange={prepareUserToAdd}\n                    placeholder={'Пётр'}\n                    name={'name'}\n                    label={'Name'}\n                    type={'text'}\n                />\n                <Input\n                    value={userToAdd.surname}\n                    onChange={prepareUserToAdd}\n                    placeholder={'Петров'}\n                    name={'surname'}\n                    label={'Surname'}\n                    type={'text'}\n                />\n                 <Input\n                    value={userToAdd.age}\n                    onChange={prepareUserToAdd}\n                    placeholder={'1'}\n                    name={'age'}\n                    label={'Age'}\n                    type={'number'}\n                />\n                <SelectWrapper>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\" >Sex</InputLabel>\n                    <Select labelId=\"demo-simple-select-outlined-label\" id=\"demo-simple-select-outlined\" value={userToAdd.sex} name={'sex'} onChange={handleSelectChange}>\n                        <MenuItem value=\"Men\">Men</MenuItem>\n                        <MenuItem value=\"Women\">Women</MenuItem>\n                        <MenuItem value=\"Robot\">Robot</MenuItem>\n                    </Select>\n                </FormControl>\n                </SelectWrapper>\n            </GridWrapper>\n            <ButtonWrapper>\n                <Button\n                    text={'Add element'}\n                    onClick={() => addItemToList()}\n                    disabled={isAddButtonDisabled}\n                />\n             </ButtonWrapper>\n            {\n                !isListEmpty && (\n                    <Table arr={list} />\n                )\n            }\n            </Paper>\n        </Wrapper>\n  );\n}\n\nexport default App;\n\n/*\n    TODO:\n        1. Заменить Input на TextArea\n        2. Сделать Select и TextArea одной ширины\n        3. Сделать кнопку более широкой, чтобы текст не переносился\n        4. Стилизовать компоненты через makeStyles() или styled(). Заменить названия классов на более читаемые\n        5. Сверстать вторую страницу\n        6. Добавить в валидацию кнопки проверку на Select (что значение выбрано)\n        7. Сделать инпут Age числовым (добавить пропс type к компоненту Input и прокинуть его в ExternalInput)\n        8* При добавлении пользователя класть list в localStorage,\n            при наличии поля list в localStorage считывать его в компоненте. Не забыть про JSON.parse(), JSON.stringify()\n */\n","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/index.js",[],["50","51"],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/Table.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/Bpp.js",["52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":20},{"ruleId":"59","severity":1,"message":"63","line":7,"column":7,"nodeType":"61","messageId":"62","endLine":7,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":24,"column":8,"nodeType":"66","endLine":24,"endColumn":10,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":38,"column":13,"nodeType":"70","endLine":38,"endColumn":24},{"ruleId":"64","severity":1,"message":"71","line":83,"column":6,"nodeType":"66","endLine":83,"endColumn":17,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":90,"column":6,"nodeType":"66","endLine":90,"endColumn":17,"suggestions":"74"},{"ruleId":"64","severity":1,"message":"73","line":97,"column":6,"nodeType":"66","endLine":97,"endColumn":17,"suggestions":"75"},{"ruleId":"55","replacedBy":"76"},{"ruleId":"57","replacedBy":"77"},{"ruleId":"59","severity":1,"message":"78","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"79","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":38},{"ruleId":"59","severity":1,"message":"80","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":20},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'ExternaInput' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has a missing dependency: 'list'. Either include it or remove the dependency array. You can also do a functional update 'setList(l => ...)' if you only need 'list' in the 'setList' call.",["84"],"React Hook useCallback has an unnecessary dependency: 'userToAdd'. Either exclude it or remove the dependency array.",["85"],["86"],["81"],["82"],"'useState' is defined but never used.","'useCallback' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},"Update the dependencies array to be: [onChange]",{"range":"94","text":"95"},"Update the dependencies array to be: [list, userToAdd]",{"range":"96","text":"97"},"Update the dependencies array to be: []",{"range":"98","text":"99"},{"range":"100","text":"99"},[671,673],"[onChange]",[2110,2121],"[list, userToAdd]",[2270,2281],"[]",[2451,2462]]