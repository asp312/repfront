[{"/Users/andrewpolyanin/Documents/GitHub/repfront/src/index.js":"1","/Users/andrewpolyanin/Documents/GitHub/repfront/src/ducks/user.js":"2","/Users/andrewpolyanin/Documents/GitHub/repfront/src/pages/UserTable/UserTable.js":"3","/Users/andrewpolyanin/Documents/GitHub/repfront/src/pages/UserInfo/UserInfo.js":"4","/Users/andrewpolyanin/Documents/GitHub/repfront/src/ducks/modal.js":"5","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/index.js":"6","/Users/andrewpolyanin/Documents/GitHub/repfront/src/context/ModalContext.js":"7","/Users/andrewpolyanin/Documents/GitHub/repfront/src/context/CreateList.jsx":"8","/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/index.js":"9","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/index.js":"10","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/List/index.js":"11","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/index.js":"12","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/index.js":"13","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/SearchInput/index.js":"14","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/index.js":"15","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/index.js":"16","/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/modal.js":"17","/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/common.js":"18","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/Table.jsx":"19","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/SearchInput/SearchInput.jsx":"20","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/Input.jsx":"21","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/Title.jsx":"22","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/List/List.jsx":"23","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/Button.jsx":"24","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/ChoiceModal.jsx":"25","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/styled.js":"26","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/ModalsBlock.jsx":"27"},{"size":397,"mtime":1612282113076,"results":"28","hashOfConfig":"29"},{"size":8043,"mtime":1612891028605,"results":"30","hashOfConfig":"29"},{"size":8855,"mtime":1612889172165,"results":"31","hashOfConfig":"29"},{"size":3222,"mtime":1612886847921,"results":"32","hashOfConfig":"29"},{"size":556,"mtime":1612803546551,"results":"33","hashOfConfig":"29"},{"size":187,"mtime":1612109493794,"results":"34","hashOfConfig":"29"},{"size":85,"mtime":1612109493796,"results":"35","hashOfConfig":"29"},{"size":82,"mtime":1611848446118,"results":"36","hashOfConfig":"29"},{"size":51,"mtime":1612109493795,"results":"37","hashOfConfig":"29"},{"size":26,"mtime":1610541878007,"results":"38","hashOfConfig":"29"},{"size":24,"mtime":1610541878008,"results":"39","hashOfConfig":"29"},{"size":25,"mtime":1610541878009,"results":"40","hashOfConfig":"29"},{"size":25,"mtime":1610550832665,"results":"41","hashOfConfig":"29"},{"size":31,"mtime":1611592584644,"results":"42","hashOfConfig":"29"},{"size":24,"mtime":1610633119295,"results":"43","hashOfConfig":"29"},{"size":31,"mtime":1612109493792,"results":"44","hashOfConfig":"29"},{"size":137,"mtime":1612174553121,"results":"45","hashOfConfig":"29"},{"size":33,"mtime":1612886847919,"results":"46","hashOfConfig":"29"},{"size":3036,"mtime":1612282113073,"results":"47","hashOfConfig":"29"},{"size":1154,"mtime":1611592584643,"results":"48","hashOfConfig":"29"},{"size":1211,"mtime":1611241102381,"results":"49","hashOfConfig":"29"},{"size":219,"mtime":1610916508713,"results":"50","hashOfConfig":"29"},{"size":314,"mtime":1610541878007,"results":"51","hashOfConfig":"29"},{"size":506,"mtime":1610989557127,"results":"52","hashOfConfig":"29"},{"size":720,"mtime":1612175053897,"results":"53","hashOfConfig":"29"},{"size":547,"mtime":1612174166571,"results":"54","hashOfConfig":"29"},{"size":2047,"mtime":1612890676399,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1v2xl1s",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},"/Users/andrewpolyanin/Documents/GitHub/repfront/src/index.js",[],["116","117"],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/ducks/user.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/pages/UserTable/UserTable.js",["118","119","120","121","122","123"],"import React, { useCallback } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Pagination from '@material-ui/lab/Pagination';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles, styled } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Button, Input, Table, Title, SearchInput } from '../../components';\nimport { DATA_PER_PAGE } from '../../constants';\nimport {fetchUserList, setCurrentPage, addUserToList, changeUserField, updateUserInfo} from '../../ducks/user';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        marginLeft: '-20px',\n        width: 520\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst Wrapper = styled(Box)({\n    width: '1120px',\n    margin: '30px auto',\n});\nconst InputWrapper = styled(Box)({\n    display: 'flex',\n    justifyContent: 'center',\n    width: '560px',\n    marginTop: '30px',\n    marginBottom: '30px',\n});\nconst ButtonWrapper = styled(Box)({\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridColumnGap: '20px',\n    width: '400px',\n    margin: '30px 35%',\n});\nconst SelectWrapper = styled(Box)({\n    marginLeft: '20px'\n});\n\nconst GridWrapper = styled(Box)({\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    columnGap: '20px',\n    rowGap: '20px',\n    width: '1000px',\n});\n\n\nconst UserTable = ({\n    searchString,\n    setSearchString,\n}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const {\n        userList,\n        isFetching,\n        isError,\n        amountOfUsers,\n        currentPage,\n        isListEmpty,\n        shouldShowPagination\n    } = useSelector((state) => ({\n        userList: state.userReducer.userList,\n        amountOfUsers: state.userReducer.amountOfUsers,\n        currentPage: state.userReducer.currentPage,\n        isListEmpty: state.userReducer.amountOfUsers === 0,\n        shouldShowPagination: state.userReducer.amountOfUsers > 10,\n        isFetching: state.userReducer.isFetching,\n        isError: state.userReducer.isError,\n    }));\n\n    const countOfPages = Math.round(amountOfUsers / DATA_PER_PAGE);\n\n    const {\n        userToAdd\n    } = useSelector((state) => ({\n        userToAdd: state.userReducer.userToAdd\n    }));\n\n    const isAddButtonDisabled = !userToAdd.name || !userToAdd.username || !userToAdd.age || !userToAdd.sex;\n\n    const prepareUserToAdd = useCallback((value) => {\n        dispatch(changeUserField(value));\n    }, [userToAdd]);\n\n    const prepareUserToUpdate = useCallback((userToUpdate) => {\n        dispatch(changeUserField(userToUpdate));\n    }, []);\n\n    const handleSelectChange = useCallback((e) => {\n        dispatch(changeUserField({\n            [e.target.name]: e.target.value\n        }));\n    }, [userToAdd]);\n\n    const handleChangePage = useCallback((e, page) => {\n        dispatch(setCurrentPage(page));\n    }, []);\n\n    const changeItemInList = useCallback(() => {\n        dispatch(updateUserInfo());\n    }, [userToAdd]);\n\n    return (\n        <Wrapper>\n            <Paper elevation={3} className = \"item4\">\n                <Title title={'First app'}/>\n                <InputWrapper>\n                    <SearchInput\n                        placeholder={'Найти'}\n                        name={'searching'}\n                        label={'Searching'}\n                        type={'text'}\n                        value={searchString}\n                        onChange={setSearchString}\n                    />\n                </InputWrapper>\n                <GridWrapper>\n                    <Input\n                        value={userToAdd.name}\n                        onChange={prepareUserToAdd}\n                        placeholder={'Пётр'}\n                        name={'name'}\n                        label={'Name'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.username}\n                        onChange={prepareUserToAdd}\n                        placeholder={'Петров'}\n                        name={'username'}\n                        label={'Username'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.email}\n                        onChange={prepareUserToAdd}\n                        placeholder={'@mail'}\n                        name={'email'}\n                        label={'Email'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.address}\n                        onChange={prepareUserToAdd}\n                        placeholder={'Mos'}\n                        name={'address'}\n                        label={'Address'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.phone}\n                        onChange={prepareUserToAdd}\n                        placeholder={'+7(987)6543210'}\n                        name={'phone'}\n                        label={'Phone'}\n                        type={'number'}\n                    />\n                    <Input\n                        value={userToAdd.website}\n                        onChange={prepareUserToAdd}\n                        placeholder={'http'}\n                        name={'website'}\n                        label={'Website'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.company}\n                        onChange={prepareUserToAdd}\n                        placeholder={'OAO'}\n                        name={'company'}\n                        label={'Company'}\n                        type={'text'}\n                    />\n                    <Input\n                        value={userToAdd.age}\n                        onChange={prepareUserToAdd}\n                        placeholder={'1'}\n                        name={'age'}\n                        label={'Age'}\n                        type={'number'}\n                    />\n                    <SelectWrapper>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-outlined-label\" >Sex</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-outlined-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={userToAdd.sex}\n                                name={'sex'}\n                                onChange={handleSelectChange}\n                                label={'Sex'}\n                            >\n                                <MenuItem value=\"Men\">Men</MenuItem>\n                                <MenuItem value=\"Women\">Women</MenuItem>\n                                <MenuItem value=\"Robot\">Robot</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </SelectWrapper>\n                </GridWrapper>\n                <ButtonWrapper>\n                    <Button\n                        text={'Add element'}\n                        onClick={() => dispatch(addUserToList())}\n                        disabled={isAddButtonDisabled}\n                    />\n                    <Button\n                        text={'Change Element'}\n                        onClick={() => changeItemInList()}\n                        disabled={isAddButtonDisabled}\n                    />\n                </ButtonWrapper>\n                {\n                    isFetching && (\n                        <CircularProgress />\n                    )\n                }\n                {\n                    isError && (\n                        <Alert severity=\"error\">Error while fetching user list. Please try again.</Alert>\n                    )\n                }\n                {\n                    !isListEmpty && (\n                        <Table arr={userList} changeItem={prepareUserToUpdate} />\n                    )\n                }\n                {\n                    shouldShowPagination && (\n                        <Pagination\n                            count={countOfPages}\n                            onChange={handleChangePage}\n                            page={currentPage}\n                            color={'primary'}\n                        />\n                    )\n                }\n            </Paper>\n        </Wrapper>\n    );\n};\n\nexport default UserTable;\n","/Users/andrewpolyanin/Documents/GitHub/repfront/src/pages/UserInfo/UserInfo.js",["124","125","126","127","128"],"import React, {useCallback, useContext} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core';\nimport {Button, ModalBlock} from '../../components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Box from '@material-ui/core/Box';\nimport { useParams } from 'react-router-dom';\nimport { CreateList } from '../../context/CreateList';\nimport {MODAL_NAME} from '../../constants';\nimport { ModalContext } from '../../context/ModalContext';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setModalName } from '../../ducks/modal';\n\n\nconst GridWrapper = styled(Box)({\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    columnGap: '20px',\n    rowGap: '20px',\n    width: '1000px',\n    marginLeft: '130px',\n    marginTop: '50px'\n});\nconst Wrapper = styled(Box)({\n    width: '400px',\n    margin: '0 auto',\n\n    '&:first-child': {\n        background: \"url('/images/4_01.jpg') center no-repeat\",\n        backgroundSize: 'contain',\n    }\n});\n\nconst TypWrapper = styled(Box)({\n    marginLeft: '40%',\n});\n\nfunction UserInfo() {\n    const params = useParams();\n    const dispatch = useDispatch();\n\n    const { selectedUser } = useSelector((state) => ({\n        selectedUser: state.userReducer.userList.find((user) => {\n            return user.id === +params.id;\n        })\n    }));\n\n    const handleOpenSuccessModal = useCallback(\n        () => dispatch(setModalName(MODAL_NAME.SUCCESS_MODAL)),\n        [],\n    );\n    const handleOpenChoiceModal = useCallback(\n        () => dispatch(setModalName(MODAL_NAME.CHOICE_MODAL)),\n        [],\n    );\n\n    if (!selectedUser) {\n        return <h5>Loading</h5>\n    }\n\n    return (\n        <>\n        <ModalBlock />\n        <Paper elevation={3} className = \"secondPaper\">\n            <TypWrapper>\n                <Typography variant=\"h4\" component=\"h1\">Список друзей</Typography>\n                <Typography variant=\"h6\" component=\"h2\">Страница Петра Петрова</Typography>\n            </TypWrapper>\n            <GridWrapper>\n                <Wrapper></Wrapper>\n                <Wrapper>\n                    <List>\n                        <ListItem>Name: {selectedUser.name}</ListItem>\n                        <ListItem>Userame: {selectedUser.username}</ListItem>\n                        <ListItem>EMAIL: {selectedUser.email}</ListItem>\n                        <ListItem>address: {selectedUser.address}</ListItem>\n                        <ListItem>phone: {selectedUser.phone}</ListItem>\n                        <ListItem>website: {selectedUser.website}</ListItem>\n                        <ListItem>company: {selectedUser.company}</ListItem>\n                        <ListItem>sex: {selectedUser.sex}</ListItem>\n                        <ListItem>age: {selectedUser.age}</ListItem>\n                    </List>\n                </Wrapper>\n            </GridWrapper>\n            <Button  text={'Go to homepage'} onClick={handleOpenChoiceModal}/>\n            <Button  text={'Open success modal'} onClick={handleOpenSuccessModal}/>\n        </Paper>\n        </>\n    )\n};\n\n\nexport default UserInfo;\n","/Users/andrewpolyanin/Documents/GitHub/repfront/src/ducks/modal.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/context/ModalContext.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/context/CreateList.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/List/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/SearchInput/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/index.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/modal.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/constants/common.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Table/Table.jsx",["129"],"import React, {useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link } from 'react-router-dom';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ExternalButton from '@material-ui/core/Button';\n\n\nexport const Table = ({ arr, changeItem }) => {\n    const handleChangeItem = useCallback((item) =>  () =>{\n        changeItem(item);\n    }, []);\n\n    return (\n        <table className = \"table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell align = {'center'}>ID</TableCell>\n                    <TableCell align = {'center'}>Name</TableCell>\n                    <TableCell align = {'center'}>Username</TableCell>\n                    <TableCell align = {'center'}>Email</TableCell>\n                    <TableCell align = {'center'}>Address</TableCell>\n                    <TableCell align = {'center'}>Phone</TableCell>\n                    <TableCell align = {'center'}>Website</TableCell>\n                    <TableCell align = {'center'}>Company</TableCell>\n                    <TableCell align = {'center'}>Age</TableCell>\n                    <TableCell align = {'center'}>Sex</TableCell>\n                    <TableCell align = {'center'}>Change</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    arr.map((item) => (\n                        <TableRow key={item.id}>\n                            <TableCell align = {'center'}>\n                                <Link to={`/user/${item.id}`}>{item.id}</Link>\n                            </TableCell>\n                            <TableCell align = {'center'}>{item.name}</TableCell>\n                            <TableCell align = {'center'}>{item.username}</TableCell>\n                            <TableCell align = {'center'}>{item.email}</TableCell>\n                            <TableCell align = {'center'}>{item.address}</TableCell>\n                            <TableCell align = {'center'}>{item.phone}</TableCell>\n                            <TableCell align = {'center'}>{item.website}</TableCell>\n                            <TableCell align = {'center'}>{item.company}</TableCell>\n                            <TableCell align = {'center'}>{item.age}</TableCell>\n                            <TableCell align = {'center'}>{item.sex}</TableCell>\n                            <TableCell align = {'center'}>\n                                <ExternalButton onClick={handleChangeItem(item)}>\n                                    <CreateIcon />\n                                </ExternalButton>\n                            </TableCell>\n                        </TableRow>\n                    ))\n                }\n            </TableBody>\n        </table>\n    )\n}\n\nTable.propTypes = {\n    arr: PropTypes.array,\n    item: PropTypes.string\n};\n\n","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/SearchInput/SearchInput.jsx",["130","131"],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Input/Input.jsx",["132","133"],"import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\n\nexport const Input = ({ onChange, value, placeholder, name, label, className, type}) => {\n    const classes = useStyles();\n\n    const handleInputChange = useCallback((e) => {\n        const inputData = {\n            [e.target.name]: e.target.value\n        };\n\n        onChange(inputData);\n    }, []);\n\n    return (\n\n        <TextField\n            className={cn(className, classes.root)}\n            type=\"text\"\n            value={value}\n            name={name}\n            onChange={handleInputChange}\n            placeholder={placeholder}\n            id=\"outlined-helperText\"\n            label={label}\n            variant=\"outlined\"\n            type={type}\n        />\n    )\n};\n\nInput.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n};\n\n","/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Title/Title.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/List/List.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/Button/Button.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/ChoiceModal.jsx",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/styled.js",[],"/Users/andrewpolyanin/Documents/GitHub/repfront/src/components/ModalsBlock/ModalsBlock.jsx",["134","135"],"import React, { useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FailureModal } from './FailureModal';\nimport { SuccessModal } from './SuccesModal';\nimport { ChoiceModal } from './ChoiceModal';\nimport {MODAL_NAME} from '../../constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetState } from '../../ducks/modal';\nimport { deleteUser } from '../../ducks/user';\nimport { useHistory } from 'react-router-dom';\n\nexport const ModalBlock = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const params = useParams();\n\n    const {\n        isSuccessModalOpen,\n        isFailureModalOpen,\n        isChoiceModalOpen\n    } = useSelector((state) => ({\n        isSuccessModalOpen: state.modalReducer === MODAL_NAME.SUCCESS_MODAL,\n        isFailureModalOpen: state.modalReducer === MODAL_NAME.FAILURE_MODAL,\n        isChoiceModalOpen: state.modalReducer === MODAL_NAME.CHOICE_MODAL\n    }));\n\n    useEffect(() => {\n\n    }, [params]);\n\n    const handleCloseModal = useCallback(\n        () => dispatch(resetState()),\n        [],\n    );\n\n    const handleButtonClick = useCallback(() => {\n        dispatch(deleteUser(params));\n        history.push('/');\n    }, []);\n\n\n    return (\n        <>\n            {\n                isSuccessModalOpen && (\n                    <SuccessModal\n                        isOpen={true}\n                        onClose={handleCloseModal}\n                    />\n                )\n            }\n            {\n                isFailureModalOpen && (\n                    <FailureModal\n                        isOpen={true}\n                        onClose={handleCloseModal}\n                    />\n                )\n            }\n            {\n                isChoiceModalOpen && (\n                    <ChoiceModal\n                        isOpen={true}\n                        onClose={handleCloseModal}\n                        onAccept={handleButtonClick}\n                    />\n                )\n            }\n        </>\n    )\n}\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":16,"column":9,"nodeType":"142","messageId":"143","endLine":16,"endColumn":22},{"ruleId":"144","severity":1,"message":"145","line":98,"column":8,"nodeType":"146","endLine":98,"endColumn":19,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"145","line":102,"column":8,"nodeType":"146","endLine":102,"endColumn":10,"suggestions":"148"},{"ruleId":"144","severity":1,"message":"145","line":108,"column":8,"nodeType":"146","endLine":108,"endColumn":19,"suggestions":"149"},{"ruleId":"144","severity":1,"message":"145","line":112,"column":8,"nodeType":"146","endLine":112,"endColumn":10,"suggestions":"150"},{"ruleId":"144","severity":1,"message":"145","line":116,"column":8,"nodeType":"146","endLine":116,"endColumn":19,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"152","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":39},{"ruleId":"140","severity":1,"message":"153","line":10,"column":10,"nodeType":"142","messageId":"143","endLine":10,"endColumn":20},{"ruleId":"140","severity":1,"message":"154","line":12,"column":10,"nodeType":"142","messageId":"143","endLine":12,"endColumn":22},{"ruleId":"144","severity":1,"message":"145","line":52,"column":9,"nodeType":"146","endLine":52,"endColumn":11,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"145","line":56,"column":9,"nodeType":"146","endLine":56,"endColumn":11,"suggestions":"156"},{"ruleId":"144","severity":1,"message":"157","line":15,"column":8,"nodeType":"146","endLine":15,"endColumn":10,"suggestions":"158"},{"ruleId":"144","severity":1,"message":"159","line":22,"column":8,"nodeType":"146","endLine":22,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":36,"column":13,"nodeType":"163","endLine":36,"endColumn":24},{"ruleId":"144","severity":1,"message":"159","line":26,"column":8,"nodeType":"146","endLine":26,"endColumn":10,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"162","line":40,"column":13,"nodeType":"163","endLine":40,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":33,"column":9,"nodeType":"146","endLine":33,"endColumn":11,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"166","line":39,"column":8,"nodeType":"146","endLine":39,"endColumn":10,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'fetchUserList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],["171"],["172"],["173"],["174"],"'useContext' is defined but never used.","'CreateList' is defined but never used.","'ModalContext' is defined but never used.",["175"],["176"],"React Hook useCallback has a missing dependency: 'changeItem'. Either include it or remove the dependency array. If 'changeItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["177"],"React Hook useCallback has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["178"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["179"],["180"],"React Hook useCallback has missing dependencies: 'dispatch', 'history', and 'params'. Either include them or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"182","fix":"185"},{"desc":"182","fix":"186"},{"desc":"182","fix":"187"},{"desc":"182","fix":"188"},{"desc":"182","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"182","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},{"range":"200","text":"199"},{"range":"201","text":"199"},{"range":"202","text":"199"},{"range":"203","text":"199"},{"range":"204","text":"199"},{"range":"205","text":"199"},"Update the dependencies array to be: [changeItem]",{"range":"206","text":"207"},"Update the dependencies array to be: [onChange]",{"range":"208","text":"209"},{"range":"210","text":"209"},{"range":"211","text":"199"},"Update the dependencies array to be: [dispatch, history, params]",{"range":"212","text":"213"},[2798,2809],"[dispatch]",[2933,2935],[3090,3101],[3208,3210],[3306,3317],[1567,1569],[1696,1698],[578,580],"[changeItem]",[619,621],"[onChange]",[682,684],[1115,1117],[1249,1251],"[dispatch, history, params]"]