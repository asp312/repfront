[{"P:\\Проекты\\repfront\\src\\index.js":"1","P:\\Проекты\\repfront\\src\\components\\Input\\Input.jsx":"2","P:\\Проекты\\repfront\\src\\components\\SearchInput\\SearchInput.jsx":"3","P:\\Проекты\\repfront\\src\\components\\Table\\Table.jsx":"4","P:\\Проекты\\repfront\\src\\pages\\UserTable\\UserTable.js":"5","P:\\Проекты\\repfront\\src\\components\\Input\\index.js":"6","P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\index.js":"7","P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\ModalsBlock.jsx":"8","P:\\Проекты\\repfront\\src\\components\\SearchInput\\index.js":"9","P:\\Проекты\\repfront\\src\\components\\Title\\index.js":"10","P:\\Проекты\\repfront\\src\\components\\Table\\index.js":"11","P:\\Проекты\\repfront\\src\\components\\Title\\Title.jsx":"12","P:\\Проекты\\repfront\\src\\components\\List\\index.js":"13","P:\\Проекты\\repfront\\src\\pages\\UserInfo\\UserInfo.js":"14","P:\\Проекты\\repfront\\src\\App.js":"15","P:\\Проекты\\repfront\\src\\ducks\\user.js":"16","P:\\Проекты\\repfront\\src\\context\\ModalContext.js":"17","P:\\Проекты\\repfront\\src\\components\\Button\\index.js":"18","P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\styled.js":"19","P:\\Проекты\\repfront\\src\\ducks\\index.js":"20"},{"size":413,"mtime":1612194262335,"results":"21","hashOfConfig":"22"},{"size":1262,"mtime":1611320514949,"results":"23","hashOfConfig":"22"},{"size":1201,"mtime":1611588922794,"results":"24","hashOfConfig":"22"},{"size":3103,"mtime":1611675545403,"results":"25","hashOfConfig":"22"},{"size":9849,"mtime":1611675825500,"results":"26","hashOfConfig":"22"},{"size":26,"mtime":1610982181917,"results":"27","hashOfConfig":"22"},{"size":32,"mtime":1612191842232,"results":"28","hashOfConfig":"22"},{"size":2207,"mtime":1612192560342,"results":"29","hashOfConfig":"22"},{"size":32,"mtime":1611588833332,"results":"30","hashOfConfig":"22"},{"size":26,"mtime":1610461705169,"results":"31","hashOfConfig":"22"},{"size":24,"mtime":1610982181918,"results":"32","hashOfConfig":"22"},{"size":230,"mtime":1610982181919,"results":"33","hashOfConfig":"22"},{"size":25,"mtime":1610461676402,"results":"34","hashOfConfig":"22"},{"size":3212,"mtime":1612192481219,"results":"35","hashOfConfig":"22"},{"size":4554,"mtime":1612192525033,"results":"36","hashOfConfig":"22"},{"size":519,"mtime":1612195233938,"results":"37","hashOfConfig":"22"},{"size":88,"mtime":1612191842235,"results":"38","hashOfConfig":"22"},{"size":27,"mtime":1610461659059,"results":"39","hashOfConfig":"22"},{"size":569,"mtime":1612191842232,"results":"40","hashOfConfig":"22"},{"size":464,"mtime":1612195093561,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o84hz9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\Проекты\\repfront\\src\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\Input\\Input.jsx",["88","89"],"import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport cn from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nexport const Input = ({ onChange, value, placeholder, name, label, className, type}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleInputChange = useCallback((e) => {\r\n        const inputData = {\r\n            [e.target.name]: e.target.value\r\n        };\r\n\r\n        onChange(inputData);\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <TextField\r\n            className={cn(className, classes.root)}\r\n            type=\"text\"\r\n            value={value}\r\n            name={name}\r\n            onChange={handleInputChange}\r\n            placeholder={placeholder}\r\n            id=\"outlined-helperText\"\r\n            label={label}\r\n            variant=\"outlined\"\r\n            type={type}\r\n        />\r\n    )\r\n};\r\n\r\nInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n};\r\n\r\n",["90","91"],"P:\\Проекты\\repfront\\src\\components\\SearchInput\\SearchInput.jsx",["92","93"],"import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport cn from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport const SearchInput = ({ onChange, value, placeholder, name, label, className, type}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleInputChange = useCallback((e) => {\r\n        onChange(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <TextField\r\n            className={cn(className, classes.root)}\r\n            type=\"text\"\r\n            value={value}\r\n            name={name}\r\n            onChange={handleInputChange}\r\n            placeholder={placeholder}\r\n            id=\"outlined-helperText\"\r\n            label={label}\r\n            variant=\"outlined\"\r\n            type={type}\r\n        />\r\n    )\r\n};\r\n\r\nSearchInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    name: PropTypes.string,\r\n};\r\n\r\n",["94","95"],"P:\\Проекты\\repfront\\src\\components\\Table\\Table.jsx",["96"],"import React, {useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ExternalButton from '@material-ui/core/Button';\r\n\r\n\r\nexport const Table = ({ arr, changeItem }) => {\r\n    const handleChangeItem = useCallback((item) =>  () =>{\r\n        changeItem(item);\r\n    }, []);\r\n\r\n    return (\r\n        <table className = \"table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell align = {'center'}>ID</TableCell>\r\n                    <TableCell align = {'center'}>Name</TableCell>\r\n                    <TableCell align = {'center'}>Username</TableCell>\r\n                    <TableCell align = {'center'}>Email</TableCell>\r\n                    <TableCell align = {'center'}>Address</TableCell>\r\n                    <TableCell align = {'center'}>Phone</TableCell>\r\n                    <TableCell align = {'center'}>Website</TableCell>\r\n                    <TableCell align = {'center'}>Company</TableCell>\r\n                    <TableCell align = {'center'}>Age</TableCell>\r\n                    <TableCell align = {'center'}>Sex</TableCell>\r\n                    <TableCell align = {'center'}>Change</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {\r\n                    arr.map((item) => (\r\n                        <TableRow key={item.id}>\r\n                            <TableCell align = {'center'}>\r\n                                <Link to={`/user/${item.id}`}>{item.id}</Link>\r\n                            </TableCell>\r\n                            <TableCell align = {'center'}>{item.name}</TableCell>\r\n                            <TableCell align = {'center'}>{item.username}</TableCell>\r\n                            <TableCell align = {'center'}>{item.email}</TableCell>\r\n                            <TableCell align = {'center'}>{item.address}</TableCell>\r\n                            <TableCell align = {'center'}>{item.phone}</TableCell>\r\n                            <TableCell align = {'center'}>{item.website}</TableCell>\r\n                            <TableCell align = {'center'}>{item.company}</TableCell>\r\n                            <TableCell align = {'center'}>{item.age}</TableCell>\r\n                            <TableCell align = {'center'}>{item.sex}</TableCell>\r\n                            <TableCell align = {'center'}>\r\n                                <ExternalButton onClick={handleChangeItem(item)}>\r\n                                    <CreateIcon />\r\n                                </ExternalButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTable.propTypes = {\r\n    arr: PropTypes.array,\r\n    item: PropTypes.string\r\n};\r\n\r\n","P:\\Проекты\\repfront\\src\\pages\\UserTable\\UserTable.js",["97","98","99","100","101"],"P:\\Проекты\\repfront\\src\\components\\Input\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\ModalsBlock.jsx",["102","103","104"],"P:\\Проекты\\repfront\\src\\components\\SearchInput\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\Title\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\Table\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\Title\\Title.jsx",[],"P:\\Проекты\\repfront\\src\\components\\List\\index.js",[],"P:\\Проекты\\repfront\\src\\pages\\UserInfo\\UserInfo.js",["105","106","107"],"P:\\Проекты\\repfront\\src\\App.js",["108"],"import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router';\r\nimport './style.css';\r\nimport { CreateList } from './context/CreateList';\r\nimport { ModalContext } from './context/ModalContext';\r\nimport UserTable from './pages/UserTable/UserTable';\r\nimport UserInfo from './pages/UserInfo/UserInfo';\r\nimport { DATA_PER_PAGE } from './constants';\r\nimport { ModalBlock } from './components';\r\n\r\n\r\nfunction App() {\r\n    const [listToShow, setList] = useState([]);\r\n    const [amountOfUsers, setAmountOfUsers] = useState(0);\r\n    const [searchString, setSearchString] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    // Состояние для модальных окон\r\n    const [modalName, setModalName] = useState('');\r\n\r\n    const location = useLocation();\r\n\r\n    // Нужно для поиска на стороне клиента\r\n    // const [searchedUsers, setSearchUsers] = useState([]);\r\n\r\n    // Поиск на стороне сервера\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(`http://localhost:3001/users?q=${searchString}&_page=${currentPage}&_limit=${DATA_PER_PAGE}`)\r\n                .then(res => res.json())\r\n                .then(dataInJSON => setList(dataInJSON));\r\n\r\n        }\r\n\r\n        fetchData();\r\n    }, [searchString, currentPage]);\r\n\r\n    // Поиск на стороне сервера\r\n    // const isSearchStringEmpty = searchString.length === 0;\r\n    // const usersToShow = isSearchStringEmpty ? list : searchedUsers;\r\n    //\r\n    // useEffect(() => {\r\n    //     const searchedUsers = list.filter(user => user.name.includes(searchString));\r\n    //\r\n    //     setSearchUsers(searchedUsers);\r\n    // }, [searchString]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // Получаем всех пользователей для определения их количества.\r\n            // По этому количеству будем рассчитывать количество страниц для компонента Pagination\r\n            await fetch(`http://localhost:3001/users`)\r\n                .then(res => res.json())\r\n                .then(dataInJSON => setAmountOfUsers(dataInJSON.length));\r\n\r\n            await fetch(`http://localhost:3001/users?_page=${currentPage}&_limit=${DATA_PER_PAGE}`)\r\n                .then(res => res.json())\r\n                .then(dataInJSON => setList(dataInJSON))\r\n        }\r\n\r\n        fetchData();\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <CreateList.Provider value={{ list:listToShow, setList }}>\r\n            <ModalContext.Provider value={{ modalName, setModalName }}>\r\n                <ModalBlock />\r\n                <Switch>\r\n            <Route\r\n                exact path=\"/\"\r\n                render={() => (\r\n                    <UserTable\r\n                        list={listToShow}\r\n                        amountOfUser={amountOfUsers}\r\n                        setList={setList}\r\n                        searchString={searchString}\r\n                        setSearchString={setSearchString}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            />\r\n                    <Route\r\n                        path=\"/user/:id\"\r\n                        render={() => (\r\n                            <UserInfo/>\r\n                        )}\r\n                    />\r\n                </Switch>\r\n            </ModalContext.Provider>\r\n        </CreateList.Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n    TODO:\r\n       1) Оформить модальные окна SuccessModal и FailureModal (заголовок, тело сообщения, кнопка)\r\n       2) Добавить модальное окно для подтвержения удаления пользователя с двумя кнопками: Отмена и Подтвердить\r\n        2.1) При нажатии на Отмена - модалка закрывается\r\n        2.2) При нажатии на Подтвердить - запрос на удаление уходит на сервер\r\n        2.3) В случае, если запрос завершился с ошибкой в блоке catch вызывать функцию setModalName(MODAl_NAME.FAILURE_MODAL)\r\n        2.4) Не забыть, что setModalName хранится в контексте ModalContext\r\n */\r\n","P:\\Проекты\\repfront\\src\\ducks\\user.js",[],"P:\\Проекты\\repfront\\src\\context\\ModalContext.js",[],"P:\\Проекты\\repfront\\src\\components\\Button\\index.js",[],"P:\\Проекты\\repfront\\src\\components\\ModalsBlock\\styled.js",[],"P:\\Проекты\\repfront\\src\\ducks\\index.js",[],{"ruleId":"109","severity":1,"message":"110","line":26,"column":8,"nodeType":"111","endLine":26,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":40,"column":13,"nodeType":"115","endLine":40,"endColumn":24},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"109","severity":1,"message":"110","line":22,"column":8,"nodeType":"111","endLine":22,"endColumn":10,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"114","line":36,"column":13,"nodeType":"115","endLine":36,"endColumn":24},{"ruleId":"116","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"109","severity":1,"message":"123","line":15,"column":8,"nodeType":"111","endLine":15,"endColumn":10,"suggestions":"124"},{"ruleId":"109","severity":1,"message":"125","line":111,"column":8,"nodeType":"111","endLine":111,"endColumn":19,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":118,"column":8,"nodeType":"111","endLine":118,"endColumn":19,"suggestions":"128"},{"ruleId":"109","severity":1,"message":"127","line":125,"column":8,"nodeType":"111","endLine":125,"endColumn":19,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"130","line":129,"column":8,"nodeType":"111","endLine":129,"endColumn":10,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"125","line":156,"column":8,"nodeType":"111","endLine":156,"endColumn":19,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":13,"column":18,"nodeType":"135","messageId":"136","endLine":13,"endColumn":25},{"ruleId":"109","severity":1,"message":"137","line":26,"column":9,"nodeType":"111","endLine":26,"endColumn":11,"suggestions":"138"},{"ruleId":"109","severity":1,"message":"139","line":39,"column":8,"nodeType":"111","endLine":39,"endColumn":22,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"134","line":41,"column":18,"nodeType":"135","messageId":"136","endLine":41,"endColumn":25},{"ruleId":"109","severity":1,"message":"137","line":48,"column":9,"nodeType":"111","endLine":48,"endColumn":11,"suggestions":"141"},{"ruleId":"109","severity":1,"message":"137","line":52,"column":9,"nodeType":"111","endLine":52,"endColumn":11,"suggestions":"142"},{"ruleId":"109","severity":1,"message":"143","line":61,"column":8,"nodeType":"111","endLine":61,"endColumn":27,"suggestions":"144"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["145"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["146"],"no-negated-in-lhs",["147"],["148"],["146"],["147"],"React Hook useCallback has a missing dependency: 'changeItem'. Either include it or remove the dependency array. If 'changeItem' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"React Hook useCallback has missing dependencies: 'list' and 'setList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],"React Hook useCallback has an unnecessary dependency: 'userToAdd'. Either exclude it or remove the dependency array.",["151"],["152"],"React Hook useCallback has a missing dependency: 'setCurrentPage'. Either include it or remove the dependency array. If 'setCurrentPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["153"],["154"],"no-unused-vars","'setList' is assigned a value but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'setModalName'. Either include it or remove the dependency array.",["155"],"React Hook useCallback has missing dependencies: 'history' and 'setModalName'. Either include them or remove the dependency array.",["156"],["157"],["158"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["159"],{"desc":"160","fix":"161"},"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"170","fix":"171"},{"desc":"165","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"173","fix":"177"},{"desc":"173","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [onChange]",{"range":"181","text":"182"},{"range":"183","text":"182"},"Update the dependencies array to be: [changeItem]",{"range":"184","text":"185"},"Update the dependencies array to be: [list, setList, userToAdd]",{"range":"186","text":"187"},"Update the dependencies array to be: []",{"range":"188","text":"189"},{"range":"190","text":"189"},"Update the dependencies array to be: [setCurrentPage]",{"range":"191","text":"192"},{"range":"193","text":"187"},"Update the dependencies array to be: [setModalName]",{"range":"194","text":"195"},"Update the dependencies array to be: [history, params.id, setModalName]",{"range":"196","text":"197"},{"range":"198","text":"195"},{"range":"199","text":"195"},"Update the dependencies array to be: [currentPage, location.pathname]",{"range":"200","text":"201"},[707,709],"[onChange]",[640,642],[592,594],"[changeItem]",[3078,3089],"[list, setList, userToAdd]",[3257,3268],"[]",[3457,3468],[3569,3571],"[setCurrentPage]",[4355,4366],[1002,1004],"[setModalName]",[1364,1378],"[history, params.id, setModalName]",[1456,1458],[1579,1581],[2347,2366],"[currentPage, location.pathname]"]